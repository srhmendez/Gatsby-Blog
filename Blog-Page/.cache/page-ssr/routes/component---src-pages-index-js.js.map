{"version":3,"file":"component---src-pages-index-js.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAIA,KAAMG,CAAAA,MAAM,CAAG,CAAC,CAAEC,SAAF,CAAD,gBACb,kCACE,KAAK,CAAE,CACLC,UAAU,CAAG,SADR,CAELC,YAAY,CAAG,SAFV,CADT,eAME,+BACE,KAAK,CAAE,CACLC,MAAM,CAAG,QADJ,CAELC,QAAQ,CAAE,GAFL,CAGLC,OAAO,CAAG,eAHL,CADT,eAOE,8BAAI,KAAK,CAAE,CAAEF,MAAM,CAAE,CAAV,CACLG,UAAU,CAAG,2CADR,CAELC,QAAQ,CAAG,MAFN,CAAX,eAIE,wBAAC,yBAAD,EAAM,SAAS,CAAC,cAAhB,CACE,EAAE,CAAC,GADL,CAEE,KAAK,CAAE,CACLC,KAAK,CAAG,OADH,CAELC,cAAc,CAAG,MAFZ,CAFT,EAOGT,SAPH,CAJF,CAPF,CANF,CADF,CAgCAD,MAAM,CAACW,SAAP,CAAmB,CACjBV,SAAS,CAAEH,6BADM,CAAnB,CAIAE,MAAM,CAACa,YAAP,CAAsB,CACpBZ,SAAS,CAAG,EADQ,CAAtB,CAIA,6CAAeD,MAAf;;AC5CA;AACA;AACA;AACA;AACA;AACA,GASA,KAAMe,CAAAA,MAAM,CAAG,CAAC,CAAEC,QAAF,CAAD,GAAkB,2BAC/B,KAAMC,CAAAA,IAAI,CAAGH,uCAAc,cAA3B,CAUA,mBACE,6DACE,+BAAK,SAAS,CAAC,YAAf,eACE,oDACE,+BAAK,GAAG,CAAC,sBAAT,CAAgC,GAAG,CAAC,wCAApC,EADF,CADF,CADF,cAME,wBAAC,MAAD,EAAQ,SAAS,CAAE,wBAAAG,IAAI,CAACC,IAAL,CAAUC,YAAV,sEAAwBC,KAAxB,GAAkC,OAArD,EANF,cAOE,+BAAK,SAAS,CAAC,iBAAf,eACE,oCAAOJ,QAAP,CADF,CAPF,cAUE,8CACO,GAAIK,CAAAA,IAAJ,GAAWC,WAAX,EADP,gBAEM,GAFN,cAGI,6BAAG,IAAI,CAAC,0BAAR,WAHJ,CAVF,CADF,CAkBD,CA7BD,CA+BAP,MAAM,CAACJ,SAAP,CAAmB,CACjBK,QAAQ,CAAElB,sCADO,CAAnB,CAIA,6CAAeiB,MAAf;;;;;;;;;;;;;;;AC7Ce,QAASU,CAAAA,KAAT,CAAe,CAAER,IAAF,CAAf,CAAyB,CACtC,KAAM,CAAES,KAAK,CAAEC,KAAT,EAAmBV,IAAI,CAACW,iBAA9B,CACA,mBACE,2DAAC,mEAAD,mBAEE,kEAAK,SAAS,CAAC,YAAf,EACGD,KAAK,CACHE,MADF,CACSC,IAAI,EAAIA,IAAI,CAACP,IAAL,CAAUQ,WAAV,CAAsBX,KAAtB,CAA4BY,MAA5B,CAAqC,CADtD,EAEEC,GAFF,CAEM,CAAC,CAAEV,IAAI,CAAEO,IAAR,CAAD,GAAoB,CACvB,mBACE,kEAAK,SAAS,CAAC,mBAAf,CAAmC,GAAG,CAAEA,IAAI,CAACI,EAA7C,eACE,kFACE,2DAAC,wCAAD,EAAM,EAAE,CAAEJ,IAAI,CAACC,WAAL,CAAiBI,IAA3B,EAAkCL,IAAI,CAACC,WAAL,CAAiBX,KAAnD,CADF,CADF,cAIE,qEAAKU,IAAI,CAACC,WAAL,CAAiBK,IAAtB,CAJF,cAKE,oEAAIN,IAAI,CAACO,OAAT,CALF,CADF,CASD,CAZF,CADH,CAFF,CADF,CAoBD,CAEM,KAAMC,CAAAA,SAAS,YAAf","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#b990db`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem .2rem`,\n      }}\n    >\n      <h1 style={{ margin: 0,\n            fontFamily: `font-family: Arial, Helvetica, sans-serif`,\n            fontSize: `3rem`, \n      }}>\n        <Link className='header-title'\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <div className='header-img'>\n        <picture>\n          <img src=\"../images/header.jpg\" alt='computer on desk with ambient lighting' />\n        </picture>\n      </div>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div className='main-blog-posts'>\n        <main>{children}</main>\n      </div>\n      <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from '../components/layout'\n\nexport default function Index({ data }) {\n  const { edges: posts } = data.allMarkdownRemark\n  return (\n    <Layout>\n\n      <div className=\"blog-posts\">\n        {posts\n          .filter(post => post.node.frontmatter.title.length > 0)\n          .map(({ node: post }) => {\n            return (\n              <div className=\"blog-post-preview\" key={post.id}>\n                <h1>\n                  <Link to={post.frontmatter.path}>{post.frontmatter.title}</Link>\n                </h1>\n                <h2>{post.frontmatter.date}</h2>\n                <p>{post.excerpt}</p>\n              </div>\n            )\n          })}\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n          }\n        }\n      }\n    }\n  }\n`"],"names":["React","PropTypes","Link","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","fontFamily","fontSize","color","textDecoration","propTypes","string","defaultProps","useStaticQuery","Layout","children","data","site","siteMetadata","title","Date","getFullYear","node","isRequired","Index","edges","posts","allMarkdownRemark","filter","post","frontmatter","length","map","id","path","date","excerpt","pageQuery"],"sourceRoot":""}